{
    // Output debugging information in the console; [type:bool]
    // Any changes will need a restart to get applied.
    "debug": true,

    // Display result report in status bar; [type:bool]
    "show_statusbar": true,

    // Augment the default search path for executables,
    // module directories, python zipfiles etc...; [type:dict:list]
    // Environment variables can be almost any dynamic-named values:
    // PATH, PYTHONPATH, GEM_PATH, TMPDIR etc... can be added here.
    // Standard variables usually contain a list of absolute paths
    // to _directories_ in which to search for files. An exception
    // makes PYTHONPATH, it may refer to zipfiles containing pure
    // Python modules (in either source or compiled form).
    // Non-existent directories and files are silently ignored.
    // This customization is temporary and will only take effect
    // for the current formatting process.
    // This option can be ommitted.
    "environ": {
        // "PATH": [],
        "GEM_PATH": ["${packages}/User/formatter.assets/ruby"],
        "PYTHONPATH": ["${packages}/User/formatter.assets/python/lib/python3.7/site-packages"]
    },

    // Formatter specific settings
    "formatters": {
        "name_id": {
            // Disable and remove plugin from being shown in the menu; [type:bool]
            // Any changes will need a restart to get applied.
            "disable": false,

            // Auto formatting whenever file is being saved; [type:bool]
            // This option should be used for plugins with unique syntaxes.
            // For plugins with the same syntaxes the first plugin will be taken.
            // Disable the others in favor of desired plugins to avoid conflicts.
            "format_on_save": false,

            // Syntax support based on the scope name, not file extension; [type:list]
            // Syntax name is part of scope name and can be retrieved from:
            // Tools > Developer > Show Scope Name
            "syntaxes": ["css", "js", "php"],

            // Path to the plugin executable to be used; [type:string]
            "executable_path": "",

            // Path to the config file for each individual syntaxes; [type:dict]
            // Syntax keys must match those in "syntaxes" option above.
            // A single config file can be used to assign to all syntaxes.
            // In this case the key must be named: "default"
            "config_path": {
                "css": "/path/to/config/___only_css_rc.json",
                "default": "/path/to/config/___combo_js_plus_php_rc.json"
            },

            // Array of additional arguments for the command line; [type:list]
            "args": []
        },

        // Lets go!
        // Please replace the following "executable_path" with yours.
        // It stays here as placeholder just for reference/how-to purpose.

       	"gstindent": {
       		"disable": false,
       		"format_on_save" : true,
       		"syntaxes" : ["c"],
       		"executable_path": "${packages}/User/formatter.assets/indent",
       		// "args": [
       		// 	"--braces-on-if-line",
       		// 	"--case-brace-indentation0",
       		// 	"--case-indentation2",
       		// 	"--braces-after-struct-decl-line",
       		// 	"--line-length80",
       		// 	"--no-tabs",
       		// 	"--cuddle-else",
       		// 	"--dont-line-up-parentheses",
       		// 	"--continuation-indentation4",
       		// 	"--honour-newlines",
       		// 	"--tab-size8",
       		// 	"--indent-level2",
       		// 	"--leave-preprocessor-space"
       		// ]
       	},

        // "beautysh": {
        //     "disable": false,
        //     "format_on_save": false,
        //     "syntaxes": ["bash"],
        //     "executable_path": "${packages}/User/formatter.assets/python/bin/beautysh",
        //     "config_path": {
        //         "default": "${packages}/User/formatter.assets/config/beautyshrc.json"
        //     }
        // },
        // "black": {
        //     "disable": false,
        //     "format_on_save": false,
        //     "syntaxes": ["python"],
        //     "executable_path": "${packages}/User/formatter.assets/python/bin/black",
        //     "config_path": {
        //         "default": "${packages}/User/formatter.assets/config/blackrc.toml"
        //     }
        // },
        // "clangformat": {
        //     "disable": false,
        //     "format_on_save": false,
        //     "syntaxes": ["c++", "objc", "objc++", "js", "java", "proto"],
        //     "executable_path": "${packages}/User/formatter.assets/bin/clang-format",
        //     "config_path": {
        //         "default": "${packages}/User/formatter.assets/config/clangformatrc.yaml"
        //     }
        // },
     
        // "jsonmax": {
        //     "disable": false,
        //     "format_on_save": false,
        //     "syntaxes": ["json"],
        //     "config_path": {
        //         "default": "${packages}/User/formatter.assets/config/jsonmaxrc.json"
        //     }
        // },
        // "jsonmin": {
        //     "disable": false,
        //     "format_on_save": false,
        //     "syntaxes": ["json"]
        //     /* no config */
        // },
        // "terser": {
        //     "disable": false,
        //     "format_on_save": false,
        //     "syntaxes": ["js"],
        //     "executable_path": "${packages}/User/formatter.assets/javascript/node_modules/.bin/terser",
        //     "config_path": {
        //         "default": "${packages}/User/formatter.assets/config/terserrc.json"
        //     }
        // }
    }
}